# Generated by Django 3.0.7 on 2020-06-30 19:01

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('public_id', models.UUIDField(default=uuid.uuid4)),
                ('name', models.CharField(max_length=50)),
                ('graph', models.TextField()),
                ('demand_matrix', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), null=True, size=None)),
                ('n', models.FloatField(null=True)),
                ('p', models.FloatField(null=True)),
                ('l', models.FloatField(null=True)),
                ('g', models.FloatField(null=True)),
                ('y', models.FloatField(null=True)),
                ('a', models.FloatField(null=True)),
                ('alpha', models.FloatField(null=True)),
                ('beta', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Optimization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('finished', 'Finished'), ('error', 'Error')], default='queued', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OptimizationResultPerRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.FloatField()),
                ('k', models.FloatField()),
                ('b', models.FloatField()),
                ('tc', models.FloatField()),
                ('co', models.FloatField()),
                ('lambda_min', models.FloatField()),
                ('optimization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.Optimization')),
            ],
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.City')),
            ],
        ),
        migrations.CreateModel(
            name='TransportNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.Scene')),
            ],
        ),
        migrations.CreateModel(
            name='TransportMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('b_a', models.IntegerField()),
                ('co', models.FloatField()),
                ('c1', models.FloatField()),
                ('c2', models.FloatField()),
                ('v', models.FloatField()),
                ('t', models.FloatField()),
                ('f_max', models.FloatField()),
                ('k_max', models.FloatField()),
                ('tetha', models.FloatField()),
                ('tat', models.FloatField()),
                ('d', models.FloatField()),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.Scene')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('node_sequence_i', models.CharField(max_length=50)),
                ('stop_sequence_i', models.CharField(max_length=50)),
                ('node_sequence_r', models.CharField(max_length=50, null=True)),
                ('stop_sequence_r', models.CharField(max_length=50, null=True)),
                ('transport_mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.TransportMode')),
                ('transport_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.TransportNetwork')),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('va', models.FloatField()),
                ('pv', models.FloatField()),
                ('pw', models.FloatField()),
                ('pa', models.FloatField()),
                ('pt', models.FloatField()),
                ('spv', models.FloatField()),
                ('spw', models.FloatField()),
                ('spa', models.FloatField()),
                ('spt', models.FloatField()),
                ('scene', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.Scene')),
            ],
        ),
        migrations.CreateModel(
            name='OptimizationResultPerRouteDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_node', models.IntegerField()),
                ('destination_node', models.IntegerField()),
                ('lambda_value', models.FloatField()),
                ('opt_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.OptimizationResultPerRoute')),
            ],
        ),
        migrations.AddField(
            model_name='optimizationresultperroute',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.Route'),
        ),
        migrations.CreateModel(
            name='OptimizationResultPerMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
                ('optimization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.Optimization')),
                ('transport_mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.TransportMode')),
            ],
        ),
        migrations.CreateModel(
            name='OptimizationResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vrc', models.FloatField()),
                ('co', models.FloatField()),
                ('ci', models.FloatField()),
                ('cu', models.FloatField()),
                ('tv', models.FloatField()),
                ('tw', models.FloatField()),
                ('ta', models.FloatField()),
                ('t', models.FloatField()),
                ('optimization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.Optimization')),
            ],
        ),
        migrations.AddField(
            model_name='optimization',
            name='transport_network',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.TransportNetwork'),
        ),
    ]
